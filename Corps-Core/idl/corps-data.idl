/*  CORPS interfaces for visual displays
    Copyright (C) 2000 Sebastian Rittau <srittau@jroger.in-berlin.de>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

// FIXME: Note well that the following interfaces are work-in-progress.
// Especially the strings will be replaced by wstrings.

module CORPS {

  typedef sequence<octet> Data;

  typedef string MIMEType;
  typedef sequence<MIMEType> MIMEList;
  exception UnsupportedMIMEType { MIMEType type; };

  interface Picture {
    readonly attribute MIMEType type;
    readonly attribute Data data;
  };

  interface Animation {
    readonly attribute MIMEType type;
    // Get more data. Pass in the maximum possible size. The actual size of
    // the data returned and the new offset is returned.
    Data poll(inout unsigned long offset, inout unsigned long size);
  };

  interface Sound {
    enum SoundType { BACKGROUND_MUSIC, OVERLAY_EFFECT };
    readonly attribute MIMEType type;
    readonly attribute SoundType type;
    // Get more data. Pass in the maximum possible size. The actual size of
    // the data returned and the new offset is returned.
    Data poll(inout unsigned long offset, inout unsigned long size);
  };
};
